export const __webpack_id__=663;export const __webpack_ids__=[663];export const __webpack_modules__={4435:(t,e,n)=>{var a=n(8323),i=n(6580),r=n(7569),o=n.n(r);n(7843),console.log("Running fistula.ts");const s={Continent:[],Incontinent:[],Partial:[]};let h=0;o().when(o().ready).then(function(){new a.t1({element:"exampleDiv",margin:20,width:800,height:600,nav:!1}).scratchpad(t=>{i.csv("/dataviz/fistula.csv",function(t){let e={PatientID:t["Patient ID"],Country:t.Country,Age:parseInt(t.Age),PatientSymptoms:t["Patient symptoms"],YearsLeaking:parseInt(t["Years leaking"]),OutcomeOfSurgery:t["Outcome of surgery"],YearsLost:parseFloat(t["Years lost"]),YearsGained:parseFloat(t["Years gained"]),Cost:parseInt(t["Surgery cost (USD)"])};return e.YearsLost>h&&(h=e.YearsLost),e.YearsGained>h&&(h=e.YearsGained),"Continent"===t["Outcome of surgery"]?s.Continent.push(e):"Incontinent"===t["Outcome of surgery"]?s.Incontinent.push(e):"Partial Continence"===t["Outcome of surgery"]&&s.Partial.push(e),e}).then(e=>{console.log("maxYears",h),t.svg.append("line").attrs({x1:.2*t.width,y1:t.height/2,x2:.9*t.width,y2:t.height/2,stroke:"black"}),t.svg.append("line").attrs({x1:.2*t.width,y1:.1*t.height,x2:.2*t.width,y2:.9*t.height,stroke:"black"}),s.Continent=s.Continent.sort((t,e)=>e.YearsGained-t.YearsGained);var n=s.Continent.length,a=.45*t.height/h,i=s.Continent[Math.floor(n/4)].YearsGained*a,r=s.Continent[Math.floor(3*n/4)].YearsGained*a,o=t.height/2;t.svg.append("rect").attrs({x:.3*t.width,width:.05*t.width,y:o-i,height:i-r,fill:"white",stroke:"black"});var l=s.Continent[Math.floor(n/2)].YearsGained*a;t.svg.append("line").attrs({x1:.3*t.width,x2:.35*t.width,y1:o-l,y2:o-l,stroke:"black"}),s.Incontinent=s.Incontinent.sort((t,e)=>e.YearsGained-t.YearsGained),n=s.Incontinent.length,a=.45*t.height/h,i=s.Incontinent[Math.floor(n/4)].YearsGained*a,r=s.Incontinent[Math.floor(3*n/4)].YearsGained*a,o=t.height/2,t.svg.append("rect").attrs({x:.4*t.width,width:.05*t.width,y:o-i,height:i-r,fill:"white",stroke:"black"}),l=s.Incontinent[Math.floor(n/2)].YearsGained*a,t.svg.append("line").attrs({x1:.4*t.width,x2:.45*t.width,y1:o-l,y2:o-l,stroke:"black"}),s.Partial=s.Partial.sort((t,e)=>e.YearsGained-t.YearsGained),n=s.Partial.length,a=.45*t.height/h,i=s.Partial[Math.floor(n/4)].YearsGained*a,r=s.Partial[Math.floor(3*n/4)].YearsGained*a,o=t.height/2,t.svg.append("rect").attrs({x:.5*t.width,width:.05*t.width,y:o-i,height:i-r,fill:"white",stroke:"black"}),l=s.Partial[Math.floor(n/2)].YearsGained*a,t.svg.append("line").attrs({x1:.5*t.width,x2:.55*t.width,y1:o-l,y2:o-l,stroke:"black"}),s.Continent=s.Continent.sort((t,e)=>e.YearsLost-t.YearsLost),n=s.Continent.length,a=.45*t.height/h,i=s.Continent[Math.floor(n/4)].YearsLost*a,r=s.Continent[Math.floor(3*n/4)].YearsLost*a,o=t.height/2,t.svg.append("rect").attrs({x:.3*t.width,width:.05*t.width,y:o+r,height:i-r,fill:"white",stroke:"black"}),l=s.Continent[Math.floor(n/2)].YearsLost*a,t.svg.append("line").attrs({x1:.3*t.width,x2:.35*t.width,y1:o+l,y2:o+l,stroke:"black"}),s.Incontinent=s.Incontinent.sort((t,e)=>e.YearsLost-t.YearsLost),n=s.Incontinent.length,a=.45*t.height/h,i=s.Incontinent[Math.floor(n/4)].YearsLost*a,r=s.Incontinent[Math.floor(3*n/4)].YearsLost*a,o=t.height/2,t.svg.append("rect").attrs({x:.4*t.width,width:.05*t.width,y:o+r,height:i-r,fill:"white",stroke:"black"}),l=s.Incontinent[Math.floor(n/2)].YearsLost*a,t.svg.append("line").attrs({x1:.4*t.width,x2:.45*t.width,y1:o+l,y2:o+l,stroke:"black"}),s.Partial=s.Partial.sort((t,e)=>e.YearsLost-t.YearsLost),n=s.Partial.length,a=.45*t.height/h,i=s.Partial[Math.floor(n/4)].YearsLost*a,r=s.Partial[Math.floor(3*n/4)].YearsLost*a,o=t.height/2,t.svg.append("rect").attrs({x:.5*t.width,width:.05*t.width,y:o+r,height:i-r,fill:"white",stroke:"black"}),l=s.Partial[Math.floor(n/2)].YearsLost*a,t.svg.append("line").attrs({x1:.5*t.width,x2:.55*t.width,y1:o+l,y2:o+l,stroke:"black"}),console.log(s)})})})}};import t from"./chart.js";import*as e from"./fistula.js";t.C(e),t(t.s=4435);