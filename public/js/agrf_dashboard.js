"use strict";(self.webpackChunkdataviz=self.webpackChunkdataviz||[]).push([[882],{2878:(e,s,l)=>{var i=l(706);console.log("Hello world"),i.d3.json("/dashboard_data").then((e=>{Promise.all(e.map(((e,s)=>Promise.all(e.map((e=>Promise.all([i.d3.json(`/AGRF/dashboard/phase${s}/preflight_light/${e}`)]).then((([l])=>({phase:`phase${s}`,...l,full:`/AGRF/dashboard/phase${s}/preflight_full/${e}`,aws:`/AGRF/dashboard/phase${s}/postflight_aws/${e}`,vast:`/AGRF/dashboard/phase${s}/postflight_vast/${e}`}))))))))).then((e=>e.reduce(((e,s)=>(s.filter((e=>e.contract_dir)).filter((e=>!e.summary.warnings.includes("Contract directory is a symlink"))).forEach((s=>{e.push(s)})),e)),[]))).then((e=>{var s,l=((s=e).forEach((e=>{if(e.summary){e.total_file_count=parseInt(e.summary.total.file_count),e.total_file_size_bytes=parseInt(e.summary.total.file_size_bytes),e.total_file_size_display=e.summary.total.file_size_human,e.include_file_count=parseInt(e.summary.include.file_count)+parseInt(e.summary.include.symlink_count),e.include_file_size_bytes=parseInt(e.summary.include.file_size_bytes),e.include_file_size_display=e.summary.include.file_size_human;var s=e.contract_dir.match("(.*)/(.*_.(.*))/contracts.*/(.*)");e.log_id=`${s[3]}_${s[4]}`}})),(0,i.ss)(s,{element:"table#my_table",titles:["phase","log_id","total_files","include_files","aws_files","difference"],info:!0,search:!0,searching:!0,paging:!0,pageLength:10,customData:{total_files:{sort:"total_file_size_bytes",display:"total_file_size_display"},include_files:{sort:"include_file_size_bytes",display:"include_file_size_display"}},columnDefs:[{targets:[2,3,4,5],type:"num"}],customRenderers:{log_id:(e,s,l,i)=>`<a href="#none" onclick="displayFiles('${l.log_id}')">${l.log_id}</a><br>${l.contract_dir}`,total_files:(e,s,l,i)=>void 0===l.total_file_count?"Loading...":"sort"===s?l.total_file_count:`${l.total_file_count}<br>${l.total_file_size_display}`,include_files:(e,s,l,i)=>void 0===l.include_file_count?"Loading...":"sort"===s?l.include_file_count:`${l.include_file_count}<br>${l.include_file_size_display}`,aws_files:(e,s,l,i)=>void 0===l.aws_files?"Loading...":"sort"===s?l.aws_files.summary.total.object_count:`<span class="${l.aws_files.summary.total.object_count==l.include_file_count?"green":"red"}">${l.aws_files.summary.total.object_count}<br>${l.aws_files.summary.total.file_size_human}</span>`,difference:(e,s,l,i)=>void 0===l.aws_files?"Loading...":l.include_file_count-l.aws_files.summary.total.object_count}}));const n=i._.debounce(l.draw,200);console.log(e);const o=(0,i.ss)([],{element:"table#summary_table",titles:["phase","total_files","include_files","aws_files","include_files_size","aws_size"],customRenderers:{include_files_size:(e,s,l,i)=>`${l.include_files_size} bytes<br>${a(l.include_files_size)}`,aws_size:(e,s,l,i)=>`${l.aws_size} bytes<br>${a(l.aws_size)}`}}),_=i._.debounce((function(e){console.log("Summarising"),console.log(e);const s=[0,1,2,3,4,5,6].map((e=>({phase:`phase${e}`,total_files:0,include_files:0,include_files_size:0,aws_files:0,aws_size:0})));e.forEach((e=>{var l=e.phase.slice(-1);s[l].total_files+=e.total_file_count,s[l].include_files+=e.include_file_count,s[l].include_files_size+=e.include_file_size_bytes,e.aws_files&&(s[l].aws_files+=e.aws_files.summary.total.object_count,s[l].aws_size+=e.aws_files.summary.total.file_size_bytes)})),o.clear(),o.rows.add(s),o.draw()}),200);e.forEach((function(s,a){i.d3.json(s.aws).then((i=>{s.aws_files=i,l.row(a).data(s),t[s.log_id]=s,n(),_(e)}))}))}))}));const t={};function a(e){let s=0;for(;e>=1024;)e/=1024,s++;return`${e.toFixed(2)} ${["B","KB","MB","GB","TB","PB"][s]}`}globalThis.displayFiles=function(e){console.log("Displaying files for",e);const s=i.d3.select("#files_table tbody").html("");let l=[],a=[],n=[];i.d3.json(t[e].full).then((s=>{t[e].full_data=s;const o=t[e];console.log(o);const _=o.contract_dir.replace("/data/Analysis/","");l=i._.concat(o.full_data.list.include.files,o.full_data.list.include.symlinks).map((([e,s,...l])=>`${_}/${s}/${e}`.replace("/./","/"))).sort(),n=o.aws_files.list.include.map((e=>e.Key)).sort(),a=i._.intersection(l,n);const c=i._.difference(n,l);return{original_only:i._.difference(l,n),aws_only:c,intersection:a}})).then((({original_only:e,aws_only:l,intersection:i})=>{console.log("Displaying files",{original_only:e,aws_only:l,intersection:i});const t=Math.max(e.length,l.length,i.length);for(let a=0;a<t;a++){const t=s.append("tr");t.append("td").text(e[a]||""),t.append("td").text(i[a]||""),t.append("td").text(l[a]||"")}}))}}},e=>{e(e.s=2878)}]);