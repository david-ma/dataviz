<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<meta name="viewport" content="width=device-width,initial-scale=1">
	<title>Camera</title>


<style>
#families .family {
    float: left;
    background: lightgrey;
    width: 200px;
    height: 250px;
    margin: 10px;
    overflow: scroll;
}
</style>

</head>
<body>
	<header>
		<div class="blur_background">
			<div class="mask"></div>
		</div>
	</header>

	<div class="container page">
        <h1 id="brandTitle">{{brand}}</h1>

        <div class="row">
			<div class="col-xs-12">
                <button type="button" onclick="addFamily()">Add Family</button>
                <button type="button" onclick="save()">Save</button>

                <div id="families"></div>
            </div>
        </div>

		<div class="row">
			<div class="col-xs-12">

				<table id="cameras">

				</table>
            </div>
		</div>
	</div>

	{{> footer}}
	<link rel="stylesheet" href="/css/main.css">
	<link rel="stylesheet" href="/css/thalia.css">
	<script src="/js/vendor.min.js"></script>
    <script src="/js/scripts.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

	<script src="/js/datatables.min.js"></script>
    <link rel="stylesheet" href="/css/jquery.dataTables.min.css">




	<script>
        var cameras = {{{cameras}}};

        console.log(`Found ${cameras.length} cameras`);

        if(cameras.length == 0) alert("No cameras found for this brand");

        var table = $("table#cameras").DataTable({
            data: cameras.filter(camera => camera.FamilyId == null),
            order: [1,'desc'],
            columnDefs: [
                {targets: [ "_all" ], orderSequence: [ "desc", "asc" ]  }
            ],
            rowId: 'identifier',
            columns: [
                { 
                    data: function( row, type, val, meta ) {

                        return `<div draggable='true' ondragstart='drag(event)' data-rowid='${row['identifier']}'>Drag Me</div>`;
                    },
                    title: 'Drag',
                    order: 'desc'
                },
                { 
                    data: 'year',
                    title: 'Year',
                    order: 'desc'
                },
                { 
                    title: 'Model',
                    data: function( row, type, val, meta ) {
                        return `<a href='/camera/${row['identifier']}' target='_blank'>${row['model']}</a>`;
                    }
                },
                { 
                    data: 'sensor_resolution',
                    title: 'Sensor Pixels',
                    order: 'desc'
                },
                { 
                    title: 'Calculated',
                    data: function( row, type, val, meta ) {
                        let res = row['sensor_resolution'].split(" x ")
                        return Math.round(res[0] * res[1] / 10000) / 100;
                    },
                    order: 'desc'
                },
                { 
                    data: 'total_megapixels',
                    title: 'Advertised Megapixels'
                }
            ]
        });





        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("text", ev.target.dataset.rowid);
        }
        function drop(ev) {
            ev.preventDefault();
            var data = ev.dataTransfer.getData("text");
            ev.target.appendChild(document.getElementById(data));

            table.row( $(`#${data}`) ).remove();

        }


        var familes = d3.select("#families");

        var familyData = {{{familes}}};

        familyData.forEach(data => {
            var family = familes.append("div")
                .classed("family", true)
                .attrs({
                    ondrop: "drop(event)",
                    ondragover: "allowDrop(event)"
                });

            family.append("input").property("value", data.name);
            var list = family.append("ul").attr("id", "lol");

            cameras.filter(camera => camera.FamilyId == data.id)
            .forEach(camera => {
                list.append('ul').text(camera.model);
            })
        });


        function addFamily() {
            console.log("Adding family lol");
            var family = familes.append("div")
                .classed("family", true)
                .attrs({
                    ondrop: "drop(event)",
                    ondragover: "allowDrop(event)"
                });

            family.append("input");
            family.append("ul");
        }


    </script>
</body>
</html>
