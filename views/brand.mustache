<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<meta name="viewport" content="width=device-width,initial-scale=1">
	<title>Camera</title>

</head>
<body>
	<header>
		<div class="blur_background">
			<div class="mask"></div>
		</div>
	</header>

	<div class="container page">
		<div class="row">
			<div class="col-xs-12">
				<input id="box">
				
				<h1 id="brandTitle">{{brand}}</h1>
				{{! <img src="/{{scrape.img} }"> }}

				<table id="cameras">

				</table>
            </div>
		</div>
	</div>

	{{> footer}}
	<link rel="stylesheet" href="/css/main.css">
	<link rel="stylesheet" href="/css/thalia.css">
	<script src="/js/vendor.min.js"></script>
    <script src="/js/scripts.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

	<script src="/js/datatables.min.js"></script>
    <link rel="stylesheet" href="/css/jquery.dataTables.min.css">




	<script>
        var cameras = {{{cameras}}};


        console.log(`Found ${cameras.length} cameras`);

        if(cameras.length == 0) alert("No cameras found for this brand");

/*
        var cameraTable = d3.select("table#cameras");
        var header = cameraTable.append("thead").append("tr");
        header.append("th").text("Year");
        header.append("th").text("Brand");
        header.append("th").text("Model");

        var body = cameraTable.append("tbody");

        cameras.forEach(function(camera){
            var tr = body.append("tr");

            tr.append("td").text(camera.year);
            tr.append("td").text(camera.brand);
            tr.append("td").text(camera.model);

        });
*/
        $("table#cameras").DataTable({
            data: cameras,
            order: [0,'desc'],
            columnDefs: [
                {targets: [ "_all" ], orderSequence: [ "desc", "desc", "asc" ]  }
            ],
            columns: [
                { 
                    data: 'year',
                    title: 'Year',
                    order: 'desc'
                },
                { 
                    title: 'Model',
                    data: function( row, type, val, meta) {
//                        let res = row['sensor_resolution'].split(" x ")
                        return `<a href='/camera/${row['brand']}_${row['model'].replace(" ", "-")}' target='_blank'>${row['model']}</a>`;
                    }
                },
                { 
                    data: 'sensor_resolution',
                    title: 'Sensor Pixels',
                    order: 'desc'
                },
                { 
                    title: 'Calculated',
                    data: function( row, type, val, meta) {
                        let res = row['sensor_resolution'].split(" x ")
                        return Math.round(res[0] * res[1] / 10000) / 100;
                    },
                    order: 'desc'
                },
                { 
                    data: 'total_megapixels',
                    title: 'Advertised Megapixels'
                }
            ]
        });




        $( function() {
			$( "#box" ).autocomplete({
				source: "{{{allCameras}}}"
			});
            // $.ajax("/all-cameras", {
            //     success: function(data){
			// 		var allCameras = eval(data);
			// 		console.log(`Number of cameras: ${allCameras.length}`);
            //         $( "#box" ).autocomplete({
            //             source: eval(allCameras)
            //         });
            //     }
            // })
        })
    </script>
</body>
</html>
